input {
  redis {
    host => "<ip-or-fqdn>"
    port => "6379"
    data_type => "list"
    key => "logstash"
    codec => "json"
    type => "syslog"
  }
}

filter {
  if "esx" in [tags] {
    grok {
      break_on_match => false
      match => [
        "message", "<%{POSINT:syslog_pri}>%{TIMESTAMP_ISO8601:@timestamp} %{SYSLOGHOST:hostname} %{SYSLOGPROG:message_program}: (?<message-body>(?<message_system_info>(?:\[%{DATA:message_thread_id} %{DATA:syslog_level} \'%{DATA:message_service}\'\ ?%{DATA:message_opID}])) \[%{DATA:message_service_info}]\ (?<message-syslog>(%{GREEDYDATA})))",
        "message", "<%{POSINT:syslog_pri}>%{TIMESTAMP_ISO8601:@timestamp} %{SYSLOGHOST:hostname} %{SYSLOGPROG:message_program}: (?<message-body>(?<message_system_info>(?:\[%{DATA:message_thread_id} %{DATA:syslog_level} \'%{DATA:message_service}\'\ ?%{DATA:message_opID}])) (?<message-syslog>(%{GREEDYDATA})))",
        "message", "<%{POSINT:syslog_pri}>%{TIMESTAMP_ISO8601:@timestamp} %{SYSLOGHOST:hostname} %{SYSLOGPROG:message_program}: %{GREEDYDATA:message-syslog}"
      ]
    }
  }
  if "vcenter" in [tags] {
    grok {
      break_on_match => false
      match => [
        "message", "%{TIMESTAMP_ISO8601:@timestamp} (?<message-body>(?<message_system_info>(?:\[%{DATA:message_thread_id} %{DATA:syslog_level} \'%{DATA:message_service}\'\ ?%{DATA:message_opID}])) \[%{DATA:message_service_info}]\ (?<message-syslog>(%{GREEDYDATA})))",
        "message", "%{TIMESTAMP_ISO8601:@timestamp} (?<message-body>(?<message_system_info>(?:\[%{DATA:message_thread_id} %{DATA:syslog_level} \'%{DATA:message_service}\'\ ?%{DATA:message_opID}])) (?<message-syslog>(%{GREEDYDATA})))",
        "message", "<%{POSINT:syslog_pri}>%{TIMESTAMP_ISO8601:@timestamp} %{GREEDYDATA:message-syslog}"
      ]
    }
  }
  if "_grokparsefailure" in [tags] {
    if "esx" in [tags] {
      grok {
        break_on_match => false
        match => [
          "message", "<%{POSINT:syslog_pri}>%{DATA:message_system_info},  (?<message-body>(%{SYSLOGHOST:hostname} %{SYSLOGPROG:message_program}: %{GREEDYDATA:message-syslog}))",
          "message", "${GREEDYDATA:message-syslog}"
        ]
      }
    }
    if "vcenter" in [tags] {
      grok {
        break_on_match => false
        match => [
          "message", "${GREEDYDATA:message-syslog}"
        ]
      }
    }
  }
  syslog_pri { }
  mutate {
    rename => [ "host", "syslog_source-IP" ]
    rename => [ "hostname", "syslog_source-hostname" ]
    rename => [ "message", "message-raw" ]
    rename => [ "program", "message_program" ]
    rename => [ "message_vce_server", "syslog_source-hostname" ]
    remove_field => [ "@version", "type", "path" ]
  }
}

output {
  elasticsearch_http {
    host => "<ip-or-fqdn>"
    port => "9200"
    flush_size => "50000"
    idle_flush_time => "30"
  }
#  stdout { codec => rubydebug }
}
